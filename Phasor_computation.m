% Функция вычисления синхрофазоров, реализующая однопериодное ДПФ
% (нерекурсивное, центрированное).
%
% !!! ВАЖНОЕ ПРИМЕЧАНИЕ.
%
% Рассчитываемые функцией синхрофазоры "phasors" - это синхрофазоры,
% рассчитанные на центр окна, т.е. с применением однопериодного
% центрированного ДПФ, нерекурсивного в том смысле, что каждый синхрофазор
% рассчитывается из "свежего" окна мгновенных значений сигнала, но
% рекурсивного в том смысле, что фаза синхрофазора рассчитывается
% относительно фазы идеальной синусоиды на частоте 50 Гц (как по C37.118).



function phasors = ...
Phasor_computation( samples, N, dt, time_ref, aux_1, aux_2 )

% ВХОДНЫЕ ПАРАМЕТРЫ:
%
% 1) samples - мгновенные значения для расчёта (первая строка -
% непосредственно мгновенные значения, вторая строка - соответствующие
% метки времени); их количество (т.е. количество столбцов) никак не должно
% быть меньше "N" (см. ниже);
% 2) N - число мгновенных значений (выборок) в одном окне ДПФ;
% 3) dt - интервал времени между выборками (в секундах);
% 4) time_ref - "опорный" момент времени (совпадающий с сигналом "1pps"),
% используемый для поворота вычисленных синхрофазоров "назад", поскольку
% фаза сигнала по C37.118 должна вычисляться относительно фазы "опорной"
% косинусоиды на промышленной частоте;
% 5-6) aux_1 и aux_2 - вспомогательные переменные, вычисляемые следующим
% образом:
% aux_1 = sqrt(2) / N;
% aux_2 = exp( -1i * 2 * pi * (-(N-1)/2 : (N-1)/2) / N ).
%
% ПРИМЕЧАНИЕ. Необходимость использования "aux_1" и "aux_2" как входных
% параметров этой функции (вместо их расчёта здесь) обусловлена тем, что
% лучше вынести их расчёт за главный цикл в основной программе, тем самым
% сэкономив вычислительные ресурсы.

% ВЫХОДНОЙ ПАРАМЕТР:
% phasors - рассчитанные синхрофазоры (первая строка - непосредственно
% синхрофазоры, вторая строка - соответствующие метки времени).



% Определяем количество принятых мгновенных значений:
num_samp = size(samples, 2);

% Определяем количество синхрофазоров, которое сможем рассчитать, и
% инициализируем значение выходной переменной:
num_ph = num_samp-N+1;
phasors = zeros(2, num_ph);

% Определяем метку времени первого синхрофазора, а дальше будем просто
% сдвигать её на "dt":
time_stamp = samples(2, 1) + dt*(N-1)/2;

% Расчёт синхрофазоров без "привязки" фазы к сигналу "1pps":
for k = 1 : num_ph
    phasors(1, k) = aux_1 * sum(  samples(1, k:(N+k-1)) .* aux_2  );
    phasors(2, k) = time_stamp + (k-1)*dt;
end

% Поворачиваем рассчитанные синхрофазоры "назад" ("привязываемся" к сигналу
% "1pps"):
time_shift = phasors(2, :) - time_ref;
phasors(1, :) = phasors(1, :) .* exp(-1i*2*pi*50*time_shift);







% Для проверки функционирования алгоритма воспользуемся набором переменных
% из одного из наших предыдущих исследований:
%
%
%
% all_time_stamps = -(N-1)*dt_n/2 : dt_n : (t_GPS(end)+(N-1)*dt_n/2);
% numel(all_time_stamps)
% ans =
%         1047
% all_sig_val = sig_var_3rd( all_time_stamps, 52, 0*A, 0, numel(all_time_stamps) );
% samples = [ all_sig_val; all_time_stamps ];
% 
% aux_1 = sqrt(2) / N;
% aux_2 = exp( -1i * 2 * pi * (-(N-1)/2 : (N-1)/2) / N );
% 
% phasors = ...
% Phasor_computation( samples, N, dt_n, 0, aux_1, aux_2 );
% 
% [ abs(FAZOR_off_nom_rec_err(1:7)); abs(phasors(1, 1:7)) ]
% ans =
%    99.7564   99.2276   98.7353   98.3165   98.0031   97.8194   97.7796
%    99.7564   99.2276   98.7353   98.3165   98.0031   97.8194   97.7796
% [ angle(FAZOR_off_nom_rec_err(1:7)) * 180/pi; ...
% angle(phasors(1, 1:7)) * 180/pi ]
% ans =
%    43.8734   44.2091   44.6264   45.1175   45.6687   46.2611   46.8722
%    43.8734   44.2091   44.6264   45.1175   45.6687   46.2611   46.8722
% 
% [ abs(FAZOR_off_nom_rec_err(end-6:end)); abs(phasors(1, end-6:end)) ]
% ans =
%    99.3883   98.8806   98.4355   98.0867   97.8610   97.7761   97.8385
%    99.3883   98.8806   98.4355   98.0867   97.8610   97.7761   97.8385
% [ angle(FAZOR_off_nom_rec_err(end-6:end)) * 180/pi; ...
% angle(phasors(1, end-6:end)) * 180/pi ]
% ans =
%   -18.2108  -17.8181  -17.3485  -16.8139  -16.2319  -15.6241  -15.0143
%   -18.2108  -17.8181  -17.3485  -16.8139  -16.2319  -15.6241  -15.0143
%
%
%
% УРА! Всё верно.
