% Заполнение буфера мгновенных значений сигнала



function buf_samp_out = ...
Buffer_of_samples( buf_samp_in, signal_in, buf_size )

% ВХОДНЫЕ ПАРАМЕТРЫ:
%
% 1) buf_samp_in - текущий буфер мгновенных значений (2 строки, "2*N"
% столбцов; первая строка - непосредственно мгновенные значения, вторая
% строка - соответствующие метки времени);
% 2) signal_in - новые мгновенные значения сигнала с соответствующими им
% метками времени (также 2 строки);
% 3) buf_size - размер циклического буфера (в нашем случае - "2*N"; задаём
% явно, чтобы не тратить вычислительные ресурсы).

% ВЫХОДНОЙ ПАРАМЕТР:
% buf_samp_out - новый буфер мгновенных значений.



% Задаём размерность выходной переменной:
buf_samp_out = buf_samp_in;

% Определяем количество дискретных отсчётов в сигнале:
num_new = size(signal_in, 2);

if num_new >= buf_size
    
    % Полностью обновляем буфер, занося туда последние "2*N" отсчётов
    % сигнала:
    buf_samp_out = signal_in(:, (end-buf_size+1):end);
    
else
    
    % Определяем, сколько необходимо оставить предыдущих значений сигнала в
    % буфере:
    to_keep = buf_size - num_new;
    
    % Выделяем соответствующие данные из буфера и переносим их в начало
    % нового буфера:
    buf_samp_out(:, 1:to_keep) = buf_samp_in(:, (end-to_keep+1):end);
    
    % Заполняем оставшуюся часть нового буфера новыми данными:
    buf_samp_out(:, (to_keep+1):end) = signal_in;
    
end







% Иллюстрация корректного функционирования алгоритма:
%
%
%
% buf_samp_in = [ 1:6; 10:10:60 ]
% buf_samp_in =
%      1     2     3     4     5     6
%     10    20    30    40    50    60
% 
% signal_small = [ 7:10; 70:10:100 ]
% signal_small =
%      7     8     9    10
%     70    80    90   100
% 
% signal_big = [ 7:15; 70:10:150 ]
% signal_big =
%      7     8     9    10    11    12    13    14    15
%     70    80    90   100   110   120   130   140   150
% 
% buf_samp_out = Buffer_of_samples( buf_samp_in, signal_small, 6 )
% buf_samp_out =
%      5     6     7     8     9    10
%     50    60    70    80    90   100
%  
% buf_samp_out = Buffer_of_samples( buf_samp_in, signal_big, 6 )
% buf_samp_out =
%     10    11    12    13    14    15
%    100   110   120   130   140   150
% 
% buf_samp_out = Buffer_of_samples( buf_samp_in, signal_big(:, 1:6), 6 )
% buf_samp_out =
%      7     8     9    10    11    12
%     70    80    90   100   110   120
% 
% buf_samp_out = Buffer_of_samples( buf_samp_in, signal_big(:, 1:5), 6 )
% buf_samp_out =
%      6     7     8     9    10    11
%     60    70    80    90   100   110
%
%
%
% Как видим, всё верно.